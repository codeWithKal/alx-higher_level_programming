====================================================================
                                                                   =
Generating Test Cases for ``3-say_my_name`` module.                =
                                                                   =
====================================================================

====================================================================
                                                                   =
File: 3-say_my_name.txt                                            =
Desc: This file contains most possible edge cases for the function =
      ``say_my_name`` in the ``3-say_my_name`` module              =
Author: kaleab shiferaw girma
Date Created: Jul 24 2022                                          =
                                                                   =
====================================================================

>>> say_my_name = __import__('3-say_my_name').say_my_name

Let's test the function by supplying valid arguments as ``first_name``
and ``second_name``.

>>> say_my_name("chala", "tola")
My name is chala tola

>>> say_my_name("Kaleab", "shife")
My name is Kaleab shife

>>> say_my_name("Kaleab Shiferaw", "Girma")
My name is Kaleab Shiferaw Girma

Let's test the function with the second argument being optional.
The argument ``last_name`` is optional

>>> say_my_name("Kaleab")
My name is Elec 

>>> say_my_name("12345")
My name is 12345 

Let's test the function by passing some non-string arguments.
The function raises a TypeError Exception when some non-string
argument is passed to it.

>>> say_my_name(None, "Shiferaw")
Traceback (most recent call last):
...
TypeError: first_name must be a string

>>> say_my_name("Kaleab", 34)
Traceback (most recent call last):
...
TypeError: last_name must be a string

>>> say_my_name(["Kaleab", "Shiferaw"])
Traceback (most recent call last):
...
TypeError: first_name must be a string

>>> say_my_name(12, 34)
Traceback (most recent call last):
...
TypeError: first_name must be a string

Let's test the function by passing no argument. If no argument is passed,
a default TypeError for missing positional argument is raised.

>>> say_my_name()
Traceback (most recent call last):
...
TypeError: say_my_name() missing 1 required positional argument: 'first_name'
